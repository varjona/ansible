---
# Install cockpit + other cockpit services.
- name: install cockpit
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ cockpit_webserver_extras }}"

# Add cockpit machines using template.
- name: Create a machines.d directory if it does not exist
  ansible.builtin.file:
    path: "{{ cockpit_machines_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: drop in an 99-webui.json template for cockpit webservers
  template:
    src: 99-webui.json.j2
    dest: "{{ cockpit_machines_dir }}{{ cockpit_machines_fn }}"

#- name: open ports with ufw
#  community.general.ufw:
#    rule: allow
#    port: "{{ item['port'] }}"
#    state: enabled
#    proto: "{{ item['protocol'] }}"
#  loop: "{{ cockpit_webserver_ports }}"

- name: create a systemd cockpit.socket.d override directory if it does not exist
  ansible.builtin.file:
    path: "{{ cockpit_socket_override_conf_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: drop in an override.conf template for cockpit webservers
  template:
    src: override.conf.j2
    dest: "{{ cockpit_socket_override_conf_dir }}{{ cockpit_socket_override_conf_fname }}"

# Daemon-reload and Restart Cockpit Services/
- name: restart cockpit services
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
  loop:
    - cockpit.socket
  when:
    - "'master_nodes' not in group_names"
