--- # TODO: Use main.yml to call on two separate YML files: one for cockpit_werbservers, another for cockpit_nodes

# Ensure necessary ports are open.
# Cockpit Webservers (personal computer + one extra computer) should have all necessary ports open.
- name: setup cockpit webservers
  block:
    # Install cockpit + other cockpit services.
    - name: install cockpit
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items: "{{ cockpit_extras }}"
    
    # Setup ports
    #   First, open firewall accordingly
    - name: setup cockpit webserver ports
      block:
        - name: open ports with firewalld
          firewalld:
            port: "{{ item }}"
            state: enabled
            immediate: True
            permanent: True
          with_items: "{{ cockpit_webserver_ports }}"

        #- name: drop in Jinja template for webservers_override.conf.j2
  # if host is in cockpit_webservers group

      # Cockpit nodes should NOT have Cockpit Webservers enabled.
- name: setup cockpit nodes
  block:
    # Install cockpit + other cockpit services.
    - name: install cockpit
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items: "{{ cockpit_extras }}"
        
    - name: setup cockpit node ports
      block:
        - name: close ports with firewalld
          firewalld:
            port: "{{ item }}"
            state: disabled
            immediate: True
            permanent: True
          with_items: "{{ cockpit_webserver_ports }}"

        #- name: drop in Jinja template for nodes_override.conj.j2
  # if host is NOT in cockpit_webservers group

    # Restart Cockpit Services/
    - name: restart cockpit services
      ansible.builtin.service:
        name: "{{ items }}"
        state: restarted
      with_items:
        - cockpit.service
        - cockpit.socket


    # Ensure only master machines host Cockpit Webservers.
    # Tested by CURLing URLs composed of hostnames and associated ports,
    # Example:
    #   http://node00:9090
    - name: confirm only selected hosts are webservers